telegram:
  token: # bot token
  chatId: -1234567890123 # chat ID for notifications
  messages:
    online: "✅ {{.Name}} is *online*" # message text when service goes "online"
    offline: "❌ {{.Name}} is *offline*: {{.Error}}" # message text when service goes "offline"
    services_list: |
      {{ range . }}
        {{- .Name | escape }}: *{{ .State | escape }}* {{ if eq .State "online" }}✅{{ else }}❌ {{ if .Error }} \({{ printf "%s" .Error | escape}}\) {{ end }} {{ end }}
      {{ end }}
services: # list of services to monitor
  - name: Google # name for notifications
    initialDelaySeconds: 5 # delay before first check in seconds, default: 0; if less than 0, random value between 0 and `periodSeconds` is used
    periodSeconds: 10 # check period in seconds, default: 10
    timeoutSeconds: 1 # response timeout in seconds, default: 1
    successThreshold: 1 # number of consecutive successful connections to go "online", default: 1
    failureThreshold: 3 # number of consecutive connection errors to go "offline", default: 3
    httpGet: # HTTP(S) service check
      scheme: https # http/https scheme
      host: google.com # service address
      path: / # path
      port: 443 # port
      httpHeaders: # additional HTTP request headers
        - name: X-Header # header name
          value: value # header value
  - name: MySQL
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
    tcpSocket: # TCP port check
      host: localhost # service address
      port: 3306 # port

